[1/11] Building C object esp-idf/connect_wifi/CMakeFiles/__idf_connect_wifi.dir/connect_wifi.c.obj
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/TEST1.c.obj
[3/11] Linking C static library esp-idf\connect_wifi\libconnect_wifi.a
[4/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST1\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/ESP IDF/project_esp/TEST1/build/bootloader/bootloader.bin""
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable TEST1.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP IDF/project_esp/TEST1/build/TEST1.bin
[9/9] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST1\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/ESP IDF/project_esp/TEST1/build/partition_table/partition-table.bin" "C:/ESP IDF/project_esp/TEST1/build/TEST1.bin""
TEST1.bin binary size 0x32cb0 bytes. Smallest app partition is 0x100000 bytes. 0xcd350 bytes (80%) free.
