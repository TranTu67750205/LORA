[1/10] Building C object esp-idf/wifi_config/CMakeFiles/__idf_wifi_config.dir/wifi_config.c.obj
[2/10] Linking C static library esp-idf\wifi_config\libwifi_config.a
[3/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST2\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/ESP IDF/project_esp/TEST2/build/bootloader/bootloader.bin""
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable TEST2.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP IDF/project_esp/TEST2/build/TEST2.bin
[7/8] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST2\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/ESP IDF/project_esp/TEST2/build/partition_table/partition-table.bin" "C:/ESP IDF/project_esp/TEST2/build/TEST2.bin""
TEST2.bin binary size 0xe6ae0 bytes. Smallest app partition is 0x100000 bytes. 0x19520 bytes (10%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressesptool.py --chip esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 TEST2.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port COM7
Connecting.........
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f0:24:f9:59:9a:40
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f6fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16360...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16360 compressed) at 0x00001000 in 0.7 seconds (effective 286.5 kbit/s)...
Hash of data verified.
Compressed 944864 bytes to 593719...
Writing at 0x00010000... (2 %)
Writing at 0x0001e6b9... (5 %)
Writing at 0x00027cc9... (8 %)
Writing at 0x0002cb2c... (10 %)
Writing at 0x00034b14... (13 %)
Writing at 0x0003e260... (16 %)
Writing at 0x00043fdf... (18 %)
Writing at 0x00049cb2... (21 %)
Writing at 0x0004fd60... (24 %)
Writing at 0x00055d99... (27 %)
Writing at 0x0005bb9a... (29 %)
Writing at 0x000616df... (32 %)
Writing at 0x000675ed... (35 %)
Writing at 0x0006dafa... (37 %)
Writing at 0x00073814... (40 %)
Writing at 0x00079410... (43 %)
Writing at 0x0007e6fd... (45 %)
Writing at 0x00083add... (48 %)
Writing at 0x00089091... (51 %)
Writing at 0x0008e455... (54 %)
Writing at 0x00093aaf... (56 %)
Writing at 0x0009930b... (59 %)
Writing at 0x0009f122... (62 %)
Writing at 0x000a4b92... (64 %)
Writing at 0x000aa676... (67 %)
Writing at 0x000b0261... (70 %)
Writing at 0x000b5e4a... (72 %)
Writing at 0x000bb7bf... (75 %)
Writing at 0x000c15c8... (78 %)
Writing at 0x000c715a... (81 %)
Writing at 0x000cc71e... (83 %)
Writing at 0x000d641a... (86 %)
Writing at 0x000de4bf... (89 %)
Writing at 0x000e42fb... (91 %)
Writing at 0x000e9e49... (94 %)
Writing at 0x000effc1... (97 %)
Writing at 0x000f51f9... (100 %)
Wrote 944864 bytes (593719 compressed) at 0x00010000 in 13.6 seconds (effective 555.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 481.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
if/frameworks/esp-idf-v5.3.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.3.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/ESP IDF/project_esp/TEST2/build" -P C:/Espressif/frameworks/esp-idf-v5.3.1/components/esptool_py/run_serial_tool.cmake"
