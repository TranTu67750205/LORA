[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST2\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/ESP IDF/project_esp/TEST2/build/bootloader/bootloader.bin""
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/8] Building C object esp-idf/SUB_MQTT/CMakeFiles/__idf_SUB_MQTT.dir/SUB_MQTT.c.obj
[3/8] Linking C static library esp-idf\SUB_MQTT\libSUB_MQTT.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable TEST2.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP IDF/project_esp/TEST2/build/TEST2.bin
[7/8] cmd.exe /C "cd /D "C:\ESP IDF\project_esp\TEST2\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/ESP IDF/project_esp/TEST2/build/partition_table/partition-table.bin" "C:/ESP IDF/project_esp/TEST2/build/TEST2.bin""
TEST2.bin binary size 0xe6c60 bytes. Smallest app partition is 0x100000 bytes. 0x193a0 bytes (10%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/espesptool.py --chip esp32 -p COM9 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 TEST2.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port COM9
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:7b:5c:27:b1:54
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f6fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16360...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16360 compressed) at 0x00001000 in 0.5 seconds (effective 391.1 kbit/s)...
Hash of data verified.
Compressed 945248 bytes to 593881...
Writing at 0x00010000... (2 %)
Writing at 0x0001e740... (5 %)
Writing at 0x00027db4... (8 %)
Writing at 0x0002cc15... (10 %)
Writing at 0x00034b46... (13 %)
Writing at 0x0003e354... (16 %)
Writing at 0x00044082... (18 %)
Writing at 0x00049e55... (21 %)
Writing at 0x0004fdf7... (24 %)
Writing at 0x00055e38... (27 %)
Writing at 0x0005bc57... (29 %)
Writing at 0x0006176b... (32 %)
Writing at 0x00067677... (35 %)
Writing at 0x0006db80... (37 %)
Writing at 0x000738ad... (40 %)
Writing at 0x000794a2... (43 %)
Writing at 0x0007e79a... (45 %)
Writing at 0x00083b89... (48 %)
Writing at 0x00089132... (51 %)
Writing at 0x0008e4f8... (54 %)
Writing at 0x00093b52... (56 %)
Writing at 0x00099395... (59 %)
Writing at 0x0009f1cb... (62 %)
Writing at 0x000a4c29... (64 %)
Writing at 0x000aa73a... (67 %)
Writing at 0x000b02f2... (70 %)
Writing at 0x000b5eda... (72 %)
Writing at 0x000bb860... (75 %)
Writing at 0x000c1664... (78 %)
Writing at 0x000c71f2... (81 %)
Writing at 0x000cc7a9... (83 %)
Writing at 0x000d64bd... (86 %)
Writing at 0x000de546... (89 %)
Writing at 0x000e43ac... (91 %)
Writing at 0x000e9ef5... (94 %)
Writing at 0x000f006f... (97 %)
Writing at 0x000f52bf... (100 %)
Wrote 945248 bytes (593881 compressed) at 0x00010000 in 14.3 seconds (effective 527.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1249.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
-idf-v5.3.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.3.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/ESP IDF/project_esp/TEST2/build" -P C:/Espressif/frameworks/esp-idf-v5.3.1/components/esptool_py/run_serial_tool.cmake"
